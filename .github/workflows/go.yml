# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main","test" ]
    pull_request:
      branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest 

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ secrets.TEST_DB_USER }}
          POSTGRES_USER: ${{ secrets.TEST_DB_USER }} 
          POSTGRES_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }} 
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    steps:
      - uses: actions/checkout@v4

      - name: Setup Go environment
        uses: actions/setup-go@v5.0.2
        with:
          go-version: '1.23.1'

      - name: Create .env file
        run: |
          echo "TEST_DB_HOST=localhost" >> .env
          echo "TEST_DB_NAME=testdb_uniclub_project" >> .env
          echo "TEST_DB_USER=${{ secrets.TEST_DB_USER }}" >> .env
          echo "TEST_DB_PASSWORD=${{ secrets.TEST_DB_PASSWORD }}" >> .env
          echo "TEST_DB_PORT=5432" >> .env

      - name: Build
        run: go build -o ./cmd/uniclub_project ./cmd
        # ./cmd/uniclub_projec

      - name: Test
        run: go test -v ./...
